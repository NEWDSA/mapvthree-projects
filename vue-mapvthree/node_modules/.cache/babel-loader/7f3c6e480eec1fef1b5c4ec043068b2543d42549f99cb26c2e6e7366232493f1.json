{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { GLTFLoader } from 'bmap-three/examples/jsm/loaders/GLTFLoader';\nimport { Engine, FlyManager, UltraDynamicSky } from 'mapv-three';\nimport * as THREE from 'bmap-three';\nexport default {\n  name: 'MapScene',\n  mixins: [],\n  props: {\n    msg: String\n  },\n  data() {\n    return {\n      config: {\n        center: [116.3899980, 39.9099206, 0],\n        pitch: 60,\n        zoom: 18\n      },\n      mixerArr: [],\n      prevTime: Date.now()\n    };\n  },\n  create() {},\n  mounted() {\n    this.initScene(this.config);\n  },\n  methods: {\n    initMapEngine(config) {\n      const {\n        center,\n        zoom,\n        pitch\n      } = config;\n      const engine = new Engine(document.getElementById('container'), {\n        rendering: {\n          enableAnimationLoop: true\n        }\n      });\n      engine.map.setCenter(center);\n      engine.map.setPitch(pitch);\n      engine.map.setZoom(zoom);\n      engine.rendering.useMrt = true;\n      engine.rendering.bloom.enabled = true;\n      engine.rendering.shadow.enabled = true;\n\n      // 设置（提供光源）\n      let sky = engine.add(new UltraDynamicSky());\n      sky.time = 3600 * 13.5;\n      const modelInfo = [{\n        position: [116.38999802501954, 39.90992061915485, 0],\n        heading: 10,\n        pitch: 90\n      }, {\n        position: [116.39108091514326, 39.912365496915655, 0],\n        heading: 180,\n        pitch: 80\n      }];\n      const flyManager = engine.add(new FlyManager());\n      const gltfLoader = new GLTFLoader();\n      let me = this;\n      gltfLoader.load('assets/Parrot.glb', async function (gltf) {\n        const model = gltf.scene.children[0];\n        for (let i = 0; i < modelInfo.length; i++) {\n          const {\n            position,\n            heading,\n            pitch\n          } = modelInfo[i];\n          const instance = model.clone();\n          const pos = engine.map.projectPointArr(position);\n          instance.rotation.x = Math.PI * 0.5;\n          instance.position.set(...pos);\n          const mixer = new THREE.AnimationMixer(instance);\n          mixer.clipAction(gltf.animations[0]).setDuration(1).play();\n          me.mixerArr.push(mixer);\n          engine.add(instance);\n          engine.event.markEventProxy(instance);\n          engine.event.bind(instance, 'click', e => {\n            console.log(e);\n            flyManager.flyTo({\n              zoom: 20,\n              center: position,\n              pitch,\n              heading\n            }, {\n              duration: 1000\n            });\n          });\n        }\n      });\n      engine.rendering.addBeforeRenderListener(() => {\n        if (me.mixerArr) {\n          const time = Date.now();\n          for (let i = 0; i < me.mixerArr.length; i++) {\n            me.mixerArr[i].update((time - me.prevTime) * 0.001);\n          }\n          me.prevTime = time;\n        }\n      });\n      return engine;\n    },\n    async initScene(config) {\n      this.initMapEngine(config);\n    }\n  }\n};","map":{"version":3,"names":["GLTFLoader","Engine","FlyManager","UltraDynamicSky","THREE","name","mixins","props","msg","String","data","config","center","pitch","zoom","mixerArr","prevTime","Date","now","create","mounted","initScene","methods","initMapEngine","engine","document","getElementById","rendering","enableAnimationLoop","map","setCenter","setPitch","setZoom","useMrt","bloom","enabled","shadow","sky","add","time","modelInfo","position","heading","flyManager","gltfLoader","me","load","gltf","model","scene","children","i","length","instance","clone","pos","projectPointArr","rotation","x","Math","PI","set","mixer","AnimationMixer","clipAction","animations","setDuration","play","push","event","markEventProxy","bind","e","console","log","flyTo","duration","addBeforeRenderListener","update"],"sources":["D:\\zhilian\\mapvthree-projects\\vue-mapvthree\\src\\components\\MapScene.vue"],"sourcesContent":["<template>\r\n    <div id=\"container\"></div>\r\n</template>\r\n\r\n<script>\r\nimport {GLTFLoader} from 'bmap-three/examples/jsm/loaders/GLTFLoader';\r\nimport {Engine, FlyManager, UltraDynamicSky} from 'mapv-three';\r\nimport * as THREE from 'bmap-three';\r\n\r\nexport default {\r\n    name: 'MapScene',\r\n    mixins: [],\r\n    props: {\r\n        msg: String\r\n    },\r\n    data() {\r\n        return {\r\n            config: {\r\n                center: [116.3899980, 39.9099206, 0],\r\n                pitch: 60,\r\n                zoom: 18\r\n            },\r\n            mixerArr: [],\r\n            prevTime: Date.now()\r\n        }\r\n    },\r\n    create() {\r\n\r\n    },\r\n    mounted() {\r\n        this.initScene(this.config);\r\n    },\r\n    methods: {\r\n        initMapEngine(config) {\r\n            const {center, zoom, pitch} = config;\r\n\r\n            const engine = new Engine(document.getElementById('container'), {\r\n                rendering: {\r\n                    enableAnimationLoop: true\r\n                }\r\n            });\r\n            engine.map.setCenter(center);\r\n            engine.map.setPitch(pitch);\r\n            engine.map.setZoom(zoom);\r\n\r\n            engine.rendering.useMrt = true;\r\n            engine.rendering.bloom.enabled = true;\r\n            engine.rendering.shadow.enabled = true;\r\n\r\n            // 设置（提供光源）\r\n            let sky = engine.add(new UltraDynamicSky());\r\n            sky.time = 3600 * 13.5;\r\n\r\n            const modelInfo = [\r\n                {\r\n                    position: [116.38999802501954, 39.90992061915485, 0],\r\n                    heading: 10,\r\n                    pitch: 90\r\n                },\r\n                {\r\n                    position: [116.39108091514326, 39.912365496915655, 0],\r\n                    heading: 180,\r\n                    pitch: 80\r\n                }\r\n            ];\r\n\r\n            const flyManager = engine.add(new FlyManager());\r\n            const gltfLoader = new GLTFLoader();\r\n            let me = this;\r\n            gltfLoader.load('assets/Parrot.glb', async function (gltf) {\r\n                const model = gltf.scene.children[0];\r\n                for (let i = 0; i < modelInfo.length; i++) {\r\n                    const {position, heading, pitch} = modelInfo[i];\r\n                    const instance = model.clone();\r\n                    const pos = engine.map.projectPointArr(position);\r\n                    instance.rotation.x = Math.PI * 0.5;\r\n                    instance.position.set(...pos);\r\n\r\n                    const mixer = new THREE.AnimationMixer(instance);\r\n                    mixer.clipAction(gltf.animations[0]).setDuration(1).play();\r\n                    me.mixerArr.push(mixer);\r\n\r\n                    engine.add(instance);\r\n                    engine.event.markEventProxy(instance);\r\n                    engine.event.bind(instance, 'click', e => {\r\n                        console.log(e);\r\n                        flyManager.flyTo({\r\n                            zoom: 20,\r\n                            center: position,\r\n                            pitch,\r\n                            heading\r\n                        }, {\r\n                            duration: 1000\r\n                        });\r\n                    });\r\n                }\r\n            });\r\n\r\n            engine.rendering.addBeforeRenderListener(() => {\r\n                if (me.mixerArr) {\r\n                    const time = Date.now();\r\n                    for (let i = 0; i < me.mixerArr.length; i++) {\r\n                        me.mixerArr[i].update((time - me.prevTime) * 0.001);\r\n                    }\r\n                    me.prevTime = time;\r\n                }\r\n            });\r\n\r\n            return engine;\r\n        },\r\n\r\n        async initScene(config) {\r\n            this.initMapEngine(config);\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n#container {\r\n    width: 100%;\r\n    height: 700px;\r\n}\r\n</style>\r\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}